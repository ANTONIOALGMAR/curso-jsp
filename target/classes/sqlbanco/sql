================================
LIST OF COMMAND SQL
================================

-- CRIANDO BANCO DE DADOS

CREATE DATABASE "curso-jsp"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'C'
    LC_CTYPE = 'C'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;


======================================================================
-- CRIAR TABELA

CREATE TABLE IF NOT EXISTS public.model_login
(
    login character varying(200) COLLATE pg_catalog."default",
    senha character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT login_unique UNIQUE (login)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.model_login
    OWNER to postgres;
    
    
========================================================================   
  -- INSERCAO DE DADOS NA TABELA LOGIN, SENHA 
    
INSERT INTO public.model_login(
	login, senha)
	VALUES ('admin', 'admin');
	
	
"insert into model_login(login, senha, nome, email) values (?,?,?,?);"	
	
========================================================================	
-- Table: public.model_login

-- DROP TABLE IF EXISTS public.model_login;

CREATE TABLE IF NOT EXISTS public.model_login
(
    login character varying(200) COLLATE pg_catalog."default" NOT NULL,
    senha character varying(200) COLLATE pg_catalog."default" NOT NULL,
    id integer NOT NULL DEFAULT nextval('model_login_id_seq'::regclass),
    nome character varying(300) COLLATE pg_catalog."default" NOT NULL,
    email character varying(300) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT model_login_pkey PRIMARY KEY (id),
    CONSTRAINT login_unique UNIQUE (login)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.model_login
    OWNER to postgres;

===========================================================================
-- ADICIONA COLUNA SENHA

alter table public.model_login ADD COLUMN senha character varying(200);

===========================================================================
-- ADICIONA COLUNA PERFIL

alter table public.model_login add column perfil character varying(200);

===========================================================================
-- ADICIONA COLUNA SEXO

alter table public.model_login ADD COLUMN sexo character varying(200);

===========================================================================
-- ATUALIZA PERFIL

UPDATE model_login set perfil = "AUXILIAR" WHERE perfil is null;

===========================================================================
-- ADICIONA FOTOUSER

alter table model_login add column fotoUser text;

===========================================================================
-- ADICIONA COLUNA extensaoFotoUser

alter table model_login add column extensaoFotoUser character varying(50);

===========================================================================
-- ADICIONA VARIAS COLUNAS

alter table public.model_login ADD COLUMN cep character varying(250);
alter table public.model_login ADD COLUMN logradouro character varying(250);
alter table public.model_login ADD COLUMN bairro character varying(250);
alter table public.model_login ADD COLUMN localidade character varying(250);
alter table public.model_login ADD COLUMN uf character varying(250);
alter table public.model_login ADD COLUMN numero character varying(250);

============================================================================

-- ALTERA O TIPO DA COLUNA PARA CHARACTER VARYING(10)

ALTER TABLE model_login
ALTER COLUMN extensaoFotoUser TYPE character varying(10);

-- Opcional: Atualiza os valores existentes se necessário
-- UPDATE model_login SET extensaoFotoUser = LEFT(extensaoFotoUser, 10) WHERE LENGTH(extensaoFotoUser) > 10;

===========================================================================
-- ALTERA O NOME DA TABELA

ALTER TABLE model_login RENAME COLUMN foto TO fotouser;


===========================================================================

-- LIMITAR A PAGINACAO

select * from model_login where usuario_id =1 order by nome offset 0 limit 5;	

===========================================================================

select count (1) from model_login where usuario_id = 1;

===========================================================================

-- CRIAR SEQUENCIA 

create sequence public.telefone_seq
increment 1
minvalue 1
maxvalue 9223372036854775807
start 1
cache 1;

==============================================================================
-- CRIAR 1 PARA MUITOS

CREATE TABLE telefone (
id integer not null default nextval ('telefone_seq'::regclass),
numero character varying(50) not null,	
usuario_pai_id bigint not null,
usuario_cad_id bigint not null,

constraint telefone_pkey primary key (id),
constraint usuario_pai_fk foreign key (usuario_pai_id) references model_login (id),
constraint usuario_cad_fk foreign key (usuario_cad_id) references model_login (id)

)

==============================================================================
-- PARA FAZER ALTERACOES NA SEQUENCIA TELEFONE SE PRECISAR


-- Alterar o incremento da sequência para 2
ALTER SEQUENCE public.telefone_seq INCREMENT 2;

-- Alterar o valor mínimo da sequência
ALTER SEQUENCE public.telefone_seq MINVALUE 10;

-- Alterar o valor máximo da sequência
ALTER SEQUENCE public.telefone_seq MAXVALUE 9223372036854775807;

-- Alterar o valor inicial da sequência
ALTER SEQUENCE public.telefone_seq RESTART WITH 5;

-- Alterar o tamanho do cache da sequência
ALTER SEQUENCE public.telefone_seq CACHE 5;

==============================================================================
-- CRIAR TABELA TELEFONE 


CREATE TABLE telefone (
id integer not null default nextval('telefone_seq'::regclass),
numero character varying(50)not null,
usuario_pai_id bigint not null,
usuario_cad_id bigint not null,
	
constraint telefone_pkey primary key (id),
constraint usuario_pai_fk foreign key (usuario_pai_id) references model_login (id),
constraint usuario_cad_fk foreign key (usuario_cad_id) references model_login (id)
)

================================================================================




	
	